<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SpiderArticle">

    <resultMap id="SpiderArticleMap" type="SpiderArticle">
        <result property="id" column="id"/>
        <result property="articleId" column="article_id"/>
        <result property="userName" column="user_name"/>
        <result property="userAvatar" column="user_avatar"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="imageUrl" column="image_url"/>
        <result property="likesNum" column="likes_num"/>
        <result property="sharesNum" column="shares_num"/>
        <result property="commentsNum" column="comments_num"/>
        <result property="commentInfoJson" column="comment_info_json"/>
        <result property="channel" column="channel"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="table">
        `spider_article`
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `article_id`, `user_name`, `user_avatar`, `title`, `content`, `image_url`, `likes_num`, `shares_num`, `comments_num`,
        `comment_info_json`, `channel`, `create_time`
    </sql>


    <sql id="vals">
        #{articleId}, #{userName}, #{userAvatar}, #{title}, #{content}, #{imageUrl}, #{likesNum}, #{sharesNum}, #{commentsNum}, #{commentInfoJson}, #{channel}, now()
    </sql>

    <sql id="criteria">
        <if test="channels != null">AND `channel` in
            <foreach collection="channels" item="channel" open="(" separator="," close=")">
                #{channel}
            </foreach>
        </if>
        <if test="sinceTime !=null"> AND create_time > #{sinceTime} </if>

    </sql>

    <select id="findById" parameterType="long" resultMap="SpiderArticleMap">
        SELECT
        <include refid="cols_all"/>
        from
        <include refid="table"/>
        WHERE `id` = #{id} LIMIT 1
    </select>

    <insert id="create" parameterType="SpiderArticle" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="table"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="table"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="SpiderArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="table"/>
        <where>
            <include refid="criteria"/>
        </where>

        LIMIT #{offset}, #{limit}
    </select>

    <select id="listSince" parameterType="map" resultMap="SpiderArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="table"/>
        WHERE  <![CDATA[
          id < #{lastId} AND create_time > #{since}
        ]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="maxId" resultType="long">
        SELECT MAX(id) FROM
        <include refid="table"/>
    </select>


</mapper>